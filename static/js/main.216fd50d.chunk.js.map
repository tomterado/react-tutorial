{"version":3,"sources":["Table.js","Form.js","App.js","index.js"],"names":["TableHeader","react_default","a","createElement","TableBody","props","rows","characterData","map","row","index","key","name","job","onClick","removeCharacter","Table","_this$props","this","Table_TableHeader","Table_TableBody","Component","Form","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","_event$target","target","value","setState","defineProperty","submitForm","handleSubmit","state","initialState","_this$state","type","onChange","App","characters","filter","character","i","chracters","concat","toConsumableArray","className","src_Table","src_Form","ReactDOM","render","src_App","document","getElementById"],"mappings":"uOAEMA,EAAc,WAChB,OACIC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,sBAMVC,EAAY,SAAAC,GACd,IAAMC,EAAOD,EAAME,cAAcC,IAAI,SAACC,EAAIC,GACtC,OACIT,EAAAC,EAAAC,cAAA,MAAIQ,IAAKD,GACLT,EAAAC,EAAAC,cAAA,cAAMM,EAAIG,KAAV,KACAX,EAAAC,EAAAC,cAAA,cAAMM,EAAII,IAAV,KACAZ,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAQW,QAAS,kBAAMT,EAAMU,gBAAgBL,KAA7C,gBAMhB,OAAOT,EAAAC,EAAAC,cAAA,iBAASG,EAAT,MAgBIU,mLAZF,IAAAC,EACsCC,KAAKb,MAAxCE,EADHU,EACGV,cAAeQ,EADlBE,EACkBF,gBAEvB,OACId,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACiB,EAAD,CAAWb,cAAeA,EAAeQ,gBAAiBA,YAPhDM,oBCqBPC,cA/CX,SAAAA,EAAYjB,GAAO,IAAAkB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAN,KAAAI,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAN,KAAAM,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAV,KAAMb,KAUVwB,aAAe,SAAAC,GAAS,IAAAC,EACGD,EAAME,OAArBpB,EADYmB,EACZnB,KAAMqB,EADMF,EACNE,MAEdV,EAAKW,SAALV,OAAAW,EAAA,EAAAX,CAAA,GACKZ,EAAOqB,KAfGV,EAmBnBa,WAAa,WACTb,EAAKlB,MAAMgC,aAAad,EAAKe,OAC7Bf,EAAKW,SAASX,EAAKgB,eAlBnBhB,EAAKgB,aAAe,CAChB3B,KAAM,GACNC,IAAK,IAGTU,EAAKe,MAAQf,EAAKgB,aARHhB,wEAwBV,IAAAiB,EACetB,KAAKoB,MAAlB1B,EADF4B,EACE5B,KAAMC,EADR2B,EACQ3B,IAEb,OACIZ,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,SACIsC,KAAK,OACL7B,KAAK,OACLqB,MAAOrB,EACP8B,SAAUxB,KAAKW,eACnB5B,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,SACIsC,KAAK,OACL7B,KAAK,MACLqB,MAAOpB,EACP6B,SAAUxB,KAAKW,eACnB5B,EAAAC,EAAAC,cAAA,SAAOsC,KAAK,SAASR,MAAM,SAASnB,QAASI,KAAKkB,qBA1C/Cf,aCkCJsB,6MA/BXL,MAAQ,CACJM,WAAY,MAGhB7B,gBAAkB,SAAAL,GAAS,IACfkC,EAAerB,EAAKe,MAApBM,WAERrB,EAAKW,SAAS,CACZU,WAAYA,EAAWC,OAAO,SAACC,EAAWC,GACxC,OAAOA,IAAMrC,SAKrB2B,aAAe,SAAAS,GACXvB,EAAKW,SAAS,CAAEc,UAAS,GAAAC,OAAAzB,OAAA0B,EAAA,EAAA1B,CAAMD,EAAKe,MAAMM,YAAjB,CAA6BE,+EAGjD,IAEEF,EAAe1B,KAAKoB,MAApBM,WAEP,OACE3C,EAAAC,EAAAC,cAAA,OAAKgD,UAAU,aACblD,EAAAC,EAAAC,cAACiD,EAAD,CAAO7C,cAAeqC,EAAY7B,gBAAiBG,KAAKH,kBACxDd,EAAAC,EAAAC,cAACkD,EAAD,CAAMhB,aAAcnB,KAAKmB,uBA1BnBhB,mBCElBiC,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.216fd50d.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst TableHeader = () => {\n    return (\n        <thead>\n            <tr>\n                <th> Name </th>\n                <th> Job </th>\n            </tr>\n        </thead>\n    )\n}\n\nconst TableBody = props => {\n    const rows = props.characterData.map((row,index) => {\n        return (\n            <tr key={index}>\n                <td> {row.name} </td>\n                <td> {row.job} </td>\n                <td>\n                    <button onClick={() => props.removeCharacter(index)}> Delete </button>\n                </td>\n            </tr>\n        )\n    })\n\n    return <tbody> {rows} </tbody>\n  }\n\n  class Table extends Component {\n    render() {\n        const { characterData, removeCharacter } = this.props\n\n        return (\n            <table>\n            <TableHeader />\n            <TableBody characterData={characterData} removeCharacter={removeCharacter} />\n            </table>\n        )\n        }\n  }\n\nexport default Table","import React, { Component } from 'react';\n\nclass Form extends Component {\n    constructor(props) {\n        super(props)\n\n        this.initialState = {\n            name: '',\n            job: '',\n        }\n\n        this.state = this.initialState\n    }\n\n    handleChange = event => {\n        const { name, value} = event.target\n\n        this.setState({\n            [name]: value,\n        })\n    }\n\n    submitForm = () => {\n        this.props.handleSubmit(this.state)\n        this.setState(this.initialState)\n    }\n\n    render() {\n        const {name, job} = this.state\n\n        return (\n            <form>\n                <label> Name </label>\n                <input \n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={this.handleChange}/>\n                <label> Job </label>\n                <input \n                    type=\"text\"\n                    name=\"job\"\n                    value={job}\n                    onChange={this.handleChange}/>\n                <input type=\"button\" value=\"Submit\" onClick={this.submitForm} />\n            </form>\n        )\n    }\n}\n\nexport default Form;","import React, { Component } from 'react'\nimport Table from './Table'\nimport Form from './Form'\n\nclass App extends Component {\n    state = {\n        characters: []\n    };\n\n    removeCharacter = index => {\n        const { characters } = this.state\n      \n        this.setState({\n          characters: characters.filter((character, i) => {\n            return i !== index\n          })\n        });\n    }\n\n    handleSubmit = character => {\n        this.setState({ chracters: [...this.state.characters, character] })\n    }\n\n    render() {\n        //Need to put the characters thrugh as data.\n        const {characters}  = this.state\n\n        return (\n          <div className=\"container\">\n            <Table characterData={characters} removeCharacter={this.removeCharacter}/>\n            <Form handleSubmit={this.handleSubmit} />\n          </div>\n        )\n      }\n}\n\nexport default App","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport './index.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}